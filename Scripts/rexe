#!/bin/bash

set -e

HOST=""
LOCAL_PATH=""
REMOTE_PATH=""
REXE_DIR="rexe"
CMD=""
DOWNLOAD="true"
EXCLUDE=()

function handle_argument()
{
    if [[ "$HOST" == "" ]]; then
        case "$1" in
            *:*)
                HOST="${1%:*}"
                REMOTE_PATH="${1#*:}"
                ;;
            *)
                HOST="$1"
                ;;
        esac
        return
    fi
    if [[ "$CMD" == "" ]]; then
        CMD="$1"
    else
        CMD="$CMD $1"
    fi
}

while [ "$#" -gt 0 ]; do
    if [[ "$CMD" == "" ]]; then
        case "$1" in
            --path=*) LOCAL_PATH="${1#*=}"; shift 1;;
            -p|--path) LOCAL_PATH="$2"; shift 2;;
            --no-download) DOWNLOAD="false"; shift 1;;
            --exclude=*) EXCLUDE+=("--exclude" "${1#*=}"); shift 1;;
            --exclude) EXCLUDE+=("--exclude" "$2"); shift 2;;

            -*) echo "unknown option: $1" >&2; exit 1;;
            *) handle_argument "$1"; shift 1;;
        esac
    else
        handle_argument "$1"
        shift 1
    fi
done

if [[ "$HOST" == "" ]]; then
    echo "error: remote host was not specified." >&2
    exit 1
fi
if [[ "$CMD" == "" ]]; then
    echo "error: remote command was not sepcified." >&2
    exit 1
fi

# fill in defaults
if [[ "$LOCAL_PATH" == "" ]]; then
    LOCAL_PATH=$(pwd)
fi
# NOTE: the tmpfs for $XDG_RUNTIME_DIR may be too small (e.g. only 10% of the available RAM)
#if [[ "$REMOTE_PATH" == "" ]]; then
#    REMOTE_PATH=$(ssh "$HOST" echo '$XDG_RUNTIME_DIR')
#fi
if [[ "$REMOTE_PATH" == "" ]]; then
    REMOTE_PATH="/tmp"
    REXE_DIR="rexe_$(ssh "$HOST" whoami)"
fi

if [[ ! -d "$LOCAL_PATH" ]]; then
    echo "error: local path '$LOCAL_PATH' is does not exist or is not a directory." >&2
    exit 1
fi

# create remote main directory for rexe with restricted permissions
echo "Creating remote directory '$REMOTE_PATH/$REXE_DIR'..."
ssh "$HOST" mkdir -m 0700 -p "$REMOTE_PATH/$REXE_DIR"

# change remote path into full path
_basename=$(basename "$LOCAL_PATH")
REMOTE_PATH="$REMOTE_PATH/$REXE_DIR/$_basename"

echo "Uploading local directory '$LOCAL_PATH' to remote directory '$REMOTE_PATH'..."
rsync -rlptD "$LOCAL_PATH/" "$HOST:$REMOTE_PATH/" -e ssh -zz --info=progress2 --delete ${EXCLUDE[@]}

echo "Executing remote command '$CMD'..."
ssh -t "$HOST" "cd $REMOTE_PATH; bash --login -c -- '$CMD'"

if [[ "$DOWNLOAD" != "false" ]]; then
    echo "Synchronizing remote directory '$REMOTE_PATH' into the local directory..."
    rsync -rlptD "$HOST:$REMOTE_PATH/" "$LOCAL_PATH/" -e ssh -zz --info=progress2 --delete ${EXCLUDE[@]}
fi
